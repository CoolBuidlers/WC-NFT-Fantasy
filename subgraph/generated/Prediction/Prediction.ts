// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AllPredictors extends ethereum.Event {
  get params(): AllPredictors__Params {
    return new AllPredictors__Params(this);
  }
}

export class AllPredictors__Params {
  _event: AllPredictors;

  constructor(event: AllPredictors) {
    this._event = event;
  }

  get smartContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get predictor(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TopPoints extends ethereum.Event {
  get params(): TopPoints__Params {
    return new TopPoints__Params(this);
  }
}

export class TopPoints__Params {
  _event: TopPoints;

  constructor(event: TopPoints) {
    this._event = event;
  }

  get firstHighestPoints(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get secondHighestPoints(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get thirdHighestPoints(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Winners extends ethereum.Event {
  get params(): Winners__Params {
    return new Winners__Params(this);
  }
}

export class Winners__Params {
  _event: Winners;

  constructor(event: Winners) {
    this._event = event;
  }

  get winnerOne(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get winnerTwo(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get winnerThree(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Prediction__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class Prediction extends ethereum.SmartContract {
  static bind(address: Address): Prediction {
    return new Prediction("Prediction", address);
  }

  changeOrderAddress(): Address {
    let result = super.call(
      "changeOrderAddress",
      "changeOrderAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_changeOrderAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "changeOrderAddress",
      "changeOrderAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  changedOrder(_predictor: Address, _num: BigInt): boolean {
    let result = super.call(
      "changedOrder",
      "changedOrder(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_predictor),
        ethereum.Value.fromUnsignedBigInt(_num)
      ]
    );

    return result[0].toBoolean();
  }

  try_changedOrder(
    _predictor: Address,
    _num: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "changedOrder",
      "changedOrder(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(_predictor),
        ethereum.Value.fromUnsignedBigInt(_num)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkUpkeep(param0: Bytes): Prediction__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(param0)
    ]);

    return new Prediction__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    param0: Bytes
  ): ethereum.CallResult<Prediction__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Prediction__checkUpkeepResult(
        value[0].toBoolean(),
        value[1].toBytes()
      )
    );
  }

  currentPhase(): i32 {
    let result = super.call("currentPhase", "currentPhase():(uint8)", []);

    return result[0].toI32();
  }

  try_currentPhase(): ethereum.CallResult<i32> {
    let result = super.tryCall("currentPhase", "currentPhase():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  fetchTeamAddress(): Address {
    let result = super.call(
      "fetchTeamAddress",
      "fetchTeamAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fetchTeamAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetchTeamAddress",
      "fetchTeamAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fewMinutes(): BigInt {
    let result = super.call("fewMinutes", "fewMinutes():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fewMinutes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fewMinutes", "fewMinutes():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBalance(): BigInt {
    let result = super.call("getBalance", "getBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getBalance", "getBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLatestPrice(): BigInt {
    let result = super.call("getLatestPrice", "getLatestPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getLatestPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLatestPrice",
      "getLatestPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPrediction(_predictor: Address, _num: BigInt): Bytes {
    let result = super.call(
      "getPrediction",
      "getPrediction(address,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_predictor),
        ethereum.Value.fromUnsignedBigInt(_num)
      ]
    );

    return result[0].toBytes();
  }

  try_getPrediction(
    _predictor: Address,
    _num: BigInt
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getPrediction",
      "getPrediction(address,uint256):(bytes)",
      [
        ethereum.Value.fromAddress(_predictor),
        ethereum.Value.fromUnsignedBigInt(_num)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasItBeenThreeMinutes(): boolean {
    let result = super.call(
      "hasItBeenThreeMinutes",
      "hasItBeenThreeMinutes():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_hasItBeenThreeMinutes(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasItBeenThreeMinutes",
      "hasItBeenThreeMinutes():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  haveYouMinted(_predictor: Address): boolean {
    let result = super.call("haveYouMinted", "haveYouMinted(address):(bool)", [
      ethereum.Value.fromAddress(_predictor)
    ]);

    return result[0].toBoolean();
  }

  try_haveYouMinted(_predictor: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "haveYouMinted",
      "haveYouMinted(address):(bool)",
      [ethereum.Value.fromAddress(_predictor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPhase16(): boolean {
    let result = super.call("isPhase16", "isPhase16():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPhase16(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPhase16", "isPhase16():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPhase32(): boolean {
    let result = super.call("isPhase32", "isPhase32():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPhase32(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPhase32", "isPhase32():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPhase4(): boolean {
    let result = super.call("isPhase4", "isPhase4():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPhase4(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPhase4", "isPhase4():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPhase8(): boolean {
    let result = super.call("isPhase8", "isPhase8():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPhase8(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPhase8", "isPhase8():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintTeamAddress(): Address {
    let result = super.call(
      "mintTeamAddress",
      "mintTeamAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_mintTeamAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mintTeamAddress",
      "mintTeamAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintedExtraTwo(_predictor: Address): boolean {
    let result = super.call(
      "mintedExtraTwo",
      "mintedExtraTwo(address):(bool)",
      [ethereum.Value.fromAddress(_predictor)]
    );

    return result[0].toBoolean();
  }

  try_mintedExtraTwo(_predictor: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "mintedExtraTwo",
      "mintedExtraTwo(address):(bool)",
      [ethereum.Value.fromAddress(_predictor)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  oneDay(): BigInt {
    let result = super.call("oneDay", "oneDay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_oneDay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("oneDay", "oneDay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  randomAndRoundAddress(): Address {
    let result = super.call(
      "randomAndRoundAddress",
      "randomAndRoundAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_randomAndRoundAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "randomAndRoundAddress",
      "randomAndRoundAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setAddress(): Address {
    let result = super.call("setAddress", "setAddress():(address)", []);

    return result[0].toAddress();
  }

  try_setAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("setAddress", "setAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  worldCupDataAddress(): Address {
    let result = super.call(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_worldCupDataAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _setAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ChangeThePhaseCall extends ethereum.Call {
  get inputs(): ChangeThePhaseCall__Inputs {
    return new ChangeThePhaseCall__Inputs(this);
  }

  get outputs(): ChangeThePhaseCall__Outputs {
    return new ChangeThePhaseCall__Outputs(this);
  }
}

export class ChangeThePhaseCall__Inputs {
  _call: ChangeThePhaseCall;

  constructor(call: ChangeThePhaseCall) {
    this._call = call;
  }
}

export class ChangeThePhaseCall__Outputs {
  _call: ChangeThePhaseCall;

  constructor(call: ChangeThePhaseCall) {
    this._call = call;
  }
}

export class DepositPointsCall extends ethereum.Call {
  get inputs(): DepositPointsCall__Inputs {
    return new DepositPointsCall__Inputs(this);
  }

  get outputs(): DepositPointsCall__Outputs {
    return new DepositPointsCall__Outputs(this);
  }
}

export class DepositPointsCall__Inputs {
  _call: DepositPointsCall;

  constructor(call: DepositPointsCall) {
    this._call = call;
  }
}

export class DepositPointsCall__Outputs {
  _call: DepositPointsCall;

  constructor(call: DepositPointsCall) {
    this._call = call;
  }
}

export class MintOtherTwoTeamsCall extends ethereum.Call {
  get inputs(): MintOtherTwoTeamsCall__Inputs {
    return new MintOtherTwoTeamsCall__Inputs(this);
  }

  get outputs(): MintOtherTwoTeamsCall__Outputs {
    return new MintOtherTwoTeamsCall__Outputs(this);
  }
}

export class MintOtherTwoTeamsCall__Inputs {
  _call: MintOtherTwoTeamsCall;

  constructor(call: MintOtherTwoTeamsCall) {
    this._call = call;
  }

  get _teamFive(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _teamSix(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class MintOtherTwoTeamsCall__Outputs {
  _call: MintOtherTwoTeamsCall;

  constructor(call: MintOtherTwoTeamsCall) {
    this._call = call;
  }
}

export class MintTopFourTeamsCall extends ethereum.Call {
  get inputs(): MintTopFourTeamsCall__Inputs {
    return new MintTopFourTeamsCall__Inputs(this);
  }

  get outputs(): MintTopFourTeamsCall__Outputs {
    return new MintTopFourTeamsCall__Outputs(this);
  }
}

export class MintTopFourTeamsCall__Inputs {
  _call: MintTopFourTeamsCall;

  constructor(call: MintTopFourTeamsCall) {
    this._call = call;
  }

  get _teamOne(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _teamTwo(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _teamThree(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _teamFour(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class MintTopFourTeamsCall__Outputs {
  _call: MintTopFourTeamsCall;

  constructor(call: MintTopFourTeamsCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class ReceiveBackMoneyCall extends ethereum.Call {
  get inputs(): ReceiveBackMoneyCall__Inputs {
    return new ReceiveBackMoneyCall__Inputs(this);
  }

  get outputs(): ReceiveBackMoneyCall__Outputs {
    return new ReceiveBackMoneyCall__Outputs(this);
  }
}

export class ReceiveBackMoneyCall__Inputs {
  _call: ReceiveBackMoneyCall;

  constructor(call: ReceiveBackMoneyCall) {
    this._call = call;
  }
}

export class ReceiveBackMoneyCall__Outputs {
  _call: ReceiveBackMoneyCall;

  constructor(call: ReceiveBackMoneyCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetChangeOrderAddressCall extends ethereum.Call {
  get inputs(): SetChangeOrderAddressCall__Inputs {
    return new SetChangeOrderAddressCall__Inputs(this);
  }

  get outputs(): SetChangeOrderAddressCall__Outputs {
    return new SetChangeOrderAddressCall__Outputs(this);
  }
}

export class SetChangeOrderAddressCall__Inputs {
  _call: SetChangeOrderAddressCall;

  constructor(call: SetChangeOrderAddressCall) {
    this._call = call;
  }

  get _changeOrderAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetChangeOrderAddressCall__Outputs {
  _call: SetChangeOrderAddressCall;

  constructor(call: SetChangeOrderAddressCall) {
    this._call = call;
  }
}

export class SetFetchTeamOneCall extends ethereum.Call {
  get inputs(): SetFetchTeamOneCall__Inputs {
    return new SetFetchTeamOneCall__Inputs(this);
  }

  get outputs(): SetFetchTeamOneCall__Outputs {
    return new SetFetchTeamOneCall__Outputs(this);
  }
}

export class SetFetchTeamOneCall__Inputs {
  _call: SetFetchTeamOneCall;

  constructor(call: SetFetchTeamOneCall) {
    this._call = call;
  }

  get _fetchTeamAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFetchTeamOneCall__Outputs {
  _call: SetFetchTeamOneCall;

  constructor(call: SetFetchTeamOneCall) {
    this._call = call;
  }
}

export class SetFifthPredictionCall extends ethereum.Call {
  get inputs(): SetFifthPredictionCall__Inputs {
    return new SetFifthPredictionCall__Inputs(this);
  }

  get outputs(): SetFifthPredictionCall__Outputs {
    return new SetFifthPredictionCall__Outputs(this);
  }
}

export class SetFifthPredictionCall__Inputs {
  _call: SetFifthPredictionCall;

  constructor(call: SetFifthPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetFifthPredictionCall__Outputs {
  _call: SetFifthPredictionCall;

  constructor(call: SetFifthPredictionCall) {
    this._call = call;
  }
}

export class SetFirstPredictionCall extends ethereum.Call {
  get inputs(): SetFirstPredictionCall__Inputs {
    return new SetFirstPredictionCall__Inputs(this);
  }

  get outputs(): SetFirstPredictionCall__Outputs {
    return new SetFirstPredictionCall__Outputs(this);
  }
}

export class SetFirstPredictionCall__Inputs {
  _call: SetFirstPredictionCall;

  constructor(call: SetFirstPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetFirstPredictionCall__Outputs {
  _call: SetFirstPredictionCall;

  constructor(call: SetFirstPredictionCall) {
    this._call = call;
  }
}

export class SetFourthPredictionCall extends ethereum.Call {
  get inputs(): SetFourthPredictionCall__Inputs {
    return new SetFourthPredictionCall__Inputs(this);
  }

  get outputs(): SetFourthPredictionCall__Outputs {
    return new SetFourthPredictionCall__Outputs(this);
  }
}

export class SetFourthPredictionCall__Inputs {
  _call: SetFourthPredictionCall;

  constructor(call: SetFourthPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetFourthPredictionCall__Outputs {
  _call: SetFourthPredictionCall;

  constructor(call: SetFourthPredictionCall) {
    this._call = call;
  }
}

export class SetMintTeamOneAddressCall extends ethereum.Call {
  get inputs(): SetMintTeamOneAddressCall__Inputs {
    return new SetMintTeamOneAddressCall__Inputs(this);
  }

  get outputs(): SetMintTeamOneAddressCall__Outputs {
    return new SetMintTeamOneAddressCall__Outputs(this);
  }
}

export class SetMintTeamOneAddressCall__Inputs {
  _call: SetMintTeamOneAddressCall;

  constructor(call: SetMintTeamOneAddressCall) {
    this._call = call;
  }

  get _mintTeamAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMintTeamOneAddressCall__Outputs {
  _call: SetMintTeamOneAddressCall;

  constructor(call: SetMintTeamOneAddressCall) {
    this._call = call;
  }
}

export class SetOrderCall extends ethereum.Call {
  get inputs(): SetOrderCall__Inputs {
    return new SetOrderCall__Inputs(this);
  }

  get outputs(): SetOrderCall__Outputs {
    return new SetOrderCall__Outputs(this);
  }
}

export class SetOrderCall__Inputs {
  _call: SetOrderCall;

  constructor(call: SetOrderCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _num(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetOrderCall__Outputs {
  _call: SetOrderCall;

  constructor(call: SetOrderCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }

  get _paused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class SetRandomAndRoundAddressCall extends ethereum.Call {
  get inputs(): SetRandomAndRoundAddressCall__Inputs {
    return new SetRandomAndRoundAddressCall__Inputs(this);
  }

  get outputs(): SetRandomAndRoundAddressCall__Outputs {
    return new SetRandomAndRoundAddressCall__Outputs(this);
  }
}

export class SetRandomAndRoundAddressCall__Inputs {
  _call: SetRandomAndRoundAddressCall;

  constructor(call: SetRandomAndRoundAddressCall) {
    this._call = call;
  }

  get _randomAndRoundAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRandomAndRoundAddressCall__Outputs {
  _call: SetRandomAndRoundAddressCall;

  constructor(call: SetRandomAndRoundAddressCall) {
    this._call = call;
  }
}

export class SetRefundCall extends ethereum.Call {
  get inputs(): SetRefundCall__Inputs {
    return new SetRefundCall__Inputs(this);
  }

  get outputs(): SetRefundCall__Outputs {
    return new SetRefundCall__Outputs(this);
  }
}

export class SetRefundCall__Inputs {
  _call: SetRefundCall;

  constructor(call: SetRefundCall) {
    this._call = call;
  }

  get _canReceiveRefund(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetRefundCall__Outputs {
  _call: SetRefundCall;

  constructor(call: SetRefundCall) {
    this._call = call;
  }
}

export class SetSecondPredictionCall extends ethereum.Call {
  get inputs(): SetSecondPredictionCall__Inputs {
    return new SetSecondPredictionCall__Inputs(this);
  }

  get outputs(): SetSecondPredictionCall__Outputs {
    return new SetSecondPredictionCall__Outputs(this);
  }
}

export class SetSecondPredictionCall__Inputs {
  _call: SetSecondPredictionCall;

  constructor(call: SetSecondPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetSecondPredictionCall__Outputs {
  _call: SetSecondPredictionCall;

  constructor(call: SetSecondPredictionCall) {
    this._call = call;
  }
}

export class SetSixthPredictionCall extends ethereum.Call {
  get inputs(): SetSixthPredictionCall__Inputs {
    return new SetSixthPredictionCall__Inputs(this);
  }

  get outputs(): SetSixthPredictionCall__Outputs {
    return new SetSixthPredictionCall__Outputs(this);
  }
}

export class SetSixthPredictionCall__Inputs {
  _call: SetSixthPredictionCall;

  constructor(call: SetSixthPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetSixthPredictionCall__Outputs {
  _call: SetSixthPredictionCall;

  constructor(call: SetSixthPredictionCall) {
    this._call = call;
  }
}

export class SetThirdPredictionCall extends ethereum.Call {
  get inputs(): SetThirdPredictionCall__Inputs {
    return new SetThirdPredictionCall__Inputs(this);
  }

  get outputs(): SetThirdPredictionCall__Outputs {
    return new SetThirdPredictionCall__Outputs(this);
  }
}

export class SetThirdPredictionCall__Inputs {
  _call: SetThirdPredictionCall;

  constructor(call: SetThirdPredictionCall) {
    this._call = call;
  }

  get _predictor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _team(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetThirdPredictionCall__Outputs {
  _call: SetThirdPredictionCall;

  constructor(call: SetThirdPredictionCall) {
    this._call = call;
  }
}

export class SetWorldCupDataAddressCall extends ethereum.Call {
  get inputs(): SetWorldCupDataAddressCall__Inputs {
    return new SetWorldCupDataAddressCall__Inputs(this);
  }

  get outputs(): SetWorldCupDataAddressCall__Outputs {
    return new SetWorldCupDataAddressCall__Outputs(this);
  }
}

export class SetWorldCupDataAddressCall__Inputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }

  get _worldCupDataAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWorldCupDataAddressCall__Outputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
