// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class OwnershipTransferRequested extends ethereum.Event {
  get params(): OwnershipTransferRequested__Params {
    return new OwnershipTransferRequested__Params(this);
  }
}

export class OwnershipTransferRequested__Params {
  _event: OwnershipTransferRequested;

  constructor(event: OwnershipTransferRequested) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RandomNumberAndRoundOwnershipTransferred extends ethereum.Event {
  get params(): RandomNumberAndRoundOwnershipTransferred__Params {
    return new RandomNumberAndRoundOwnershipTransferred__Params(this);
  }
}

export class RandomNumberAndRoundOwnershipTransferred__Params {
  _event: RandomNumberAndRoundOwnershipTransferred;

  constructor(event: RandomNumberAndRoundOwnershipTransferred) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RequestFulfilled extends ethereum.Event {
  get params(): RequestFulfilled__Params {
    return new RequestFulfilled__Params(this);
  }
}

export class RequestFulfilled__Params {
  _event: RequestFulfilled;

  constructor(event: RequestFulfilled) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get randomWords(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class RequestSent extends ethereum.Event {
  get params(): RequestSent__Params {
    return new RequestSent__Params(this);
  }
}

export class RequestSent__Params {
  _event: RequestSent;

  constructor(event: RequestSent) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get numWords(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoundChanged extends ethereum.Event {
  get params(): RoundChanged__Params {
    return new RoundChanged__Params(this);
  }
}

export class RoundChanged__Params {
  _event: RoundChanged;

  constructor(event: RoundChanged) {
    this._event = event;
  }

  get requestId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get time(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get round(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RandomNumberAndRound__getRequestStatusResult {
  value0: boolean;
  value1: Array<BigInt>;

  constructor(value0: boolean, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getFulfilled(): boolean {
    return this.value0;
  }

  getRandomWords(): Array<BigInt> {
    return this.value1;
  }
}

export class RandomNumberAndRound__s_requestsResult {
  value0: boolean;
  value1: boolean;

  constructor(value0: boolean, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getFulfilled(): boolean {
    return this.value0;
  }

  getExists(): boolean {
    return this.value1;
  }
}

export class RandomNumberAndRound extends ethereum.SmartContract {
  static bind(address: Address): RandomNumberAndRound {
    return new RandomNumberAndRound("RandomNumberAndRound", address);
  }

  fetchCurrentRound(): Bytes {
    let result = super.call(
      "fetchCurrentRound",
      "fetchCurrentRound():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_fetchCurrentRound(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "fetchCurrentRound",
      "fetchCurrentRound():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRequestStatus(): RandomNumberAndRound__getRequestStatusResult {
    let result = super.call(
      "getRequestStatus",
      "getRequestStatus():(bool,uint256[])",
      []
    );

    return new RandomNumberAndRound__getRequestStatusResult(
      result[0].toBoolean(),
      result[1].toBigIntArray()
    );
  }

  try_getRequestStatus(): ethereum.CallResult<
    RandomNumberAndRound__getRequestStatusResult
  > {
    let result = super.tryCall(
      "getRequestStatus",
      "getRequestStatus():(bool,uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RandomNumberAndRound__getRequestStatusResult(
        value[0].toBoolean(),
        value[1].toBigIntArray()
      )
    );
  }

  lastRequestId(): BigInt {
    let result = super.call("lastRequestId", "lastRequestId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastRequestId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastRequestId",
      "lastRequestId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  predictionAddress(): Address {
    let result = super.call(
      "predictionAddress",
      "predictionAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_predictionAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "predictionAddress",
      "predictionAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  requestIds(param0: BigInt): BigInt {
    let result = super.call("requestIds", "requestIds(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_requestIds(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("requestIds", "requestIds(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  requestRandomWords(): BigInt {
    let result = super.call(
      "requestRandomWords",
      "requestRandomWords():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_requestRandomWords(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "requestRandomWords",
      "requestRandomWords():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  s_requests(param0: BigInt): RandomNumberAndRound__s_requestsResult {
    let result = super.call("s_requests", "s_requests(uint256):(bool,bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new RandomNumberAndRound__s_requestsResult(
      result[0].toBoolean(),
      result[1].toBoolean()
    );
  }

  try_s_requests(
    param0: BigInt
  ): ethereum.CallResult<RandomNumberAndRound__s_requestsResult> {
    let result = super.tryCall(
      "s_requests",
      "s_requests(uint256):(bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RandomNumberAndRound__s_requestsResult(
        value[0].toBoolean(),
        value[1].toBoolean()
      )
    );
  }

  setAddress(): Address {
    let result = super.call("setAddress", "setAddress():(address)", []);

    return result[0].toAddress();
  }

  try_setAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("setAddress", "setAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  worldCupDataAddress(): Address {
    let result = super.call(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_worldCupDataAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _setAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class FetchCurrentRoundCall extends ethereum.Call {
  get inputs(): FetchCurrentRoundCall__Inputs {
    return new FetchCurrentRoundCall__Inputs(this);
  }

  get outputs(): FetchCurrentRoundCall__Outputs {
    return new FetchCurrentRoundCall__Outputs(this);
  }
}

export class FetchCurrentRoundCall__Inputs {
  _call: FetchCurrentRoundCall;

  constructor(call: FetchCurrentRoundCall) {
    this._call = call;
  }
}

export class FetchCurrentRoundCall__Outputs {
  _call: FetchCurrentRoundCall;

  constructor(call: FetchCurrentRoundCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class FulfillRoundCall extends ethereum.Call {
  get inputs(): FulfillRoundCall__Inputs {
    return new FulfillRoundCall__Inputs(this);
  }

  get outputs(): FulfillRoundCall__Outputs {
    return new FulfillRoundCall__Outputs(this);
  }
}

export class FulfillRoundCall__Inputs {
  _call: FulfillRoundCall;

  constructor(call: FulfillRoundCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _volume(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class FulfillRoundCall__Outputs {
  _call: FulfillRoundCall;

  constructor(call: FulfillRoundCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class RequestRandomWordsCall extends ethereum.Call {
  get inputs(): RequestRandomWordsCall__Inputs {
    return new RequestRandomWordsCall__Inputs(this);
  }

  get outputs(): RequestRandomWordsCall__Outputs {
    return new RequestRandomWordsCall__Outputs(this);
  }
}

export class RequestRandomWordsCall__Inputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }
}

export class RequestRandomWordsCall__Outputs {
  _call: RequestRandomWordsCall;

  constructor(call: RequestRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SetPredictionAddressCall extends ethereum.Call {
  get inputs(): SetPredictionAddressCall__Inputs {
    return new SetPredictionAddressCall__Inputs(this);
  }

  get outputs(): SetPredictionAddressCall__Outputs {
    return new SetPredictionAddressCall__Outputs(this);
  }
}

export class SetPredictionAddressCall__Inputs {
  _call: SetPredictionAddressCall;

  constructor(call: SetPredictionAddressCall) {
    this._call = call;
  }

  get _predictionAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPredictionAddressCall__Outputs {
  _call: SetPredictionAddressCall;

  constructor(call: SetPredictionAddressCall) {
    this._call = call;
  }
}

export class SetSubscriptionIdCall extends ethereum.Call {
  get inputs(): SetSubscriptionIdCall__Inputs {
    return new SetSubscriptionIdCall__Inputs(this);
  }

  get outputs(): SetSubscriptionIdCall__Outputs {
    return new SetSubscriptionIdCall__Outputs(this);
  }
}

export class SetSubscriptionIdCall__Inputs {
  _call: SetSubscriptionIdCall;

  constructor(call: SetSubscriptionIdCall) {
    this._call = call;
  }

  get subscriptionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSubscriptionIdCall__Outputs {
  _call: SetSubscriptionIdCall;

  constructor(call: SetSubscriptionIdCall) {
    this._call = call;
  }
}

export class SetWorldCupDataAddressCall extends ethereum.Call {
  get inputs(): SetWorldCupDataAddressCall__Inputs {
    return new SetWorldCupDataAddressCall__Inputs(this);
  }

  get outputs(): SetWorldCupDataAddressCall__Outputs {
    return new SetWorldCupDataAddressCall__Outputs(this);
  }
}

export class SetWorldCupDataAddressCall__Inputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }

  get _worldCupDataAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWorldCupDataAddressCall__Outputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall extends ethereum.Call {
  get inputs(): WithdrawLinkCall__Inputs {
    return new WithdrawLinkCall__Inputs(this);
  }

  get outputs(): WithdrawLinkCall__Outputs {
    return new WithdrawLinkCall__Outputs(this);
  }
}

export class WithdrawLinkCall__Inputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}

export class WithdrawLinkCall__Outputs {
  _call: WithdrawLinkCall;

  constructor(call: WithdrawLinkCall) {
    this._call = call;
  }
}
