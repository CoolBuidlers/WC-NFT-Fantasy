// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FetchTeamsOneOwnershipTransferred extends ethereum.Event {
  get params(): FetchTeamsOneOwnershipTransferred__Params {
    return new FetchTeamsOneOwnershipTransferred__Params(this);
  }
}

export class FetchTeamsOneOwnershipTransferred__Params {
  _event: FetchTeamsOneOwnershipTransferred;

  constructor(event: FetchTeamsOneOwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FetchTeamsOne extends ethereum.SmartContract {
  static bind(address: Address): FetchTeamsOne {
    return new FetchTeamsOne("FetchTeamsOne", address);
  }

  getFirstPlaceTeam(): Bytes {
    let result = super.call(
      "getFirstPlaceTeam",
      "getFirstPlaceTeam():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_getFirstPlaceTeam(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getFirstPlaceTeam",
      "getFirstPlaceTeam():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getFourthPlaceTeam(): Bytes {
    let result = super.call(
      "getFourthPlaceTeam",
      "getFourthPlaceTeam():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_getFourthPlaceTeam(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getFourthPlaceTeam",
      "getFourthPlaceTeam():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getSecondPlaceTeam(): Bytes {
    let result = super.call(
      "getSecondPlaceTeam",
      "getSecondPlaceTeam():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_getSecondPlaceTeam(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getSecondPlaceTeam",
      "getSecondPlaceTeam():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getThirdPlaceTeam(): Bytes {
    let result = super.call(
      "getThirdPlaceTeam",
      "getThirdPlaceTeam():(bytes)",
      []
    );

    return result[0].toBytes();
  }

  try_getThirdPlaceTeam(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getThirdPlaceTeam",
      "getThirdPlaceTeam():(bytes)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setAddress(): Address {
    let result = super.call("setAddress", "setAddress():(address)", []);

    return result[0].toAddress();
  }

  try_setAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("setAddress", "setAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  worldCupDataAddress(): Address {
    let result = super.call(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_worldCupDataAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "worldCupDataAddress",
      "worldCupDataAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _setAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFirstPlaceTeamCall extends ethereum.Call {
  get inputs(): SetFirstPlaceTeamCall__Inputs {
    return new SetFirstPlaceTeamCall__Inputs(this);
  }

  get outputs(): SetFirstPlaceTeamCall__Outputs {
    return new SetFirstPlaceTeamCall__Outputs(this);
  }
}

export class SetFirstPlaceTeamCall__Inputs {
  _call: SetFirstPlaceTeamCall;

  constructor(call: SetFirstPlaceTeamCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFirstPlaceTeamCall__Outputs {
  _call: SetFirstPlaceTeamCall;

  constructor(call: SetFirstPlaceTeamCall) {
    this._call = call;
  }
}

export class SetFourthPlaceTeamCall extends ethereum.Call {
  get inputs(): SetFourthPlaceTeamCall__Inputs {
    return new SetFourthPlaceTeamCall__Inputs(this);
  }

  get outputs(): SetFourthPlaceTeamCall__Outputs {
    return new SetFourthPlaceTeamCall__Outputs(this);
  }
}

export class SetFourthPlaceTeamCall__Inputs {
  _call: SetFourthPlaceTeamCall;

  constructor(call: SetFourthPlaceTeamCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFourthPlaceTeamCall__Outputs {
  _call: SetFourthPlaceTeamCall;

  constructor(call: SetFourthPlaceTeamCall) {
    this._call = call;
  }
}

export class SetSecondPlaceTeamCall extends ethereum.Call {
  get inputs(): SetSecondPlaceTeamCall__Inputs {
    return new SetSecondPlaceTeamCall__Inputs(this);
  }

  get outputs(): SetSecondPlaceTeamCall__Outputs {
    return new SetSecondPlaceTeamCall__Outputs(this);
  }
}

export class SetSecondPlaceTeamCall__Inputs {
  _call: SetSecondPlaceTeamCall;

  constructor(call: SetSecondPlaceTeamCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetSecondPlaceTeamCall__Outputs {
  _call: SetSecondPlaceTeamCall;

  constructor(call: SetSecondPlaceTeamCall) {
    this._call = call;
  }
}

export class SetThirdPlaceTeamCall extends ethereum.Call {
  get inputs(): SetThirdPlaceTeamCall__Inputs {
    return new SetThirdPlaceTeamCall__Inputs(this);
  }

  get outputs(): SetThirdPlaceTeamCall__Outputs {
    return new SetThirdPlaceTeamCall__Outputs(this);
  }
}

export class SetThirdPlaceTeamCall__Inputs {
  _call: SetThirdPlaceTeamCall;

  constructor(call: SetThirdPlaceTeamCall) {
    this._call = call;
  }

  get _teamId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetThirdPlaceTeamCall__Outputs {
  _call: SetThirdPlaceTeamCall;

  constructor(call: SetThirdPlaceTeamCall) {
    this._call = call;
  }
}

export class SetWorldCupDataAddressCall extends ethereum.Call {
  get inputs(): SetWorldCupDataAddressCall__Inputs {
    return new SetWorldCupDataAddressCall__Inputs(this);
  }

  get outputs(): SetWorldCupDataAddressCall__Outputs {
    return new SetWorldCupDataAddressCall__Outputs(this);
  }
}

export class SetWorldCupDataAddressCall__Inputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }

  get _worldCupDataAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWorldCupDataAddressCall__Outputs {
  _call: SetWorldCupDataAddressCall;

  constructor(call: SetWorldCupDataAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
