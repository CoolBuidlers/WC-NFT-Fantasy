// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EvolveOwnershipTransferred extends ethereum.Event {
  get params(): EvolveOwnershipTransferred__Params {
    return new EvolveOwnershipTransferred__Params(this);
  }
}

export class EvolveOwnershipTransferred__Params {
  _event: EvolveOwnershipTransferred;

  constructor(event: EvolveOwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Evolve extends ethereum.SmartContract {
  static bind(address: Address): Evolve {
    return new Evolve("Evolve", address);
  }

  fetchTeamFourAddress(): Address {
    let result = super.call(
      "fetchTeamFourAddress",
      "fetchTeamFourAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fetchTeamFourAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetchTeamFourAddress",
      "fetchTeamFourAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetchTeamOneAddress(): Address {
    let result = super.call(
      "fetchTeamOneAddress",
      "fetchTeamOneAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fetchTeamOneAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetchTeamOneAddress",
      "fetchTeamOneAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetchTeamThreeAddress(): Address {
    let result = super.call(
      "fetchTeamThreeAddress",
      "fetchTeamThreeAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fetchTeamThreeAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetchTeamThreeAddress",
      "fetchTeamThreeAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fetchTeamTwoAddress(): Address {
    let result = super.call(
      "fetchTeamTwoAddress",
      "fetchTeamTwoAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_fetchTeamTwoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "fetchTeamTwoAddress",
      "fetchTeamTwoAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintTeamOneAddress(): Address {
    let result = super.call(
      "mintTeamOneAddress",
      "mintTeamOneAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_mintTeamOneAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mintTeamOneAddress",
      "mintTeamOneAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mintTeamTwoAddress(): Address {
    let result = super.call(
      "mintTeamTwoAddress",
      "mintTeamTwoAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_mintTeamTwoAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mintTeamTwoAddress",
      "mintTeamTwoAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  predictionAddress(): Address {
    let result = super.call(
      "predictionAddress",
      "predictionAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_predictionAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "predictionAddress",
      "predictionAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setAddress(): Address {
    let result = super.call("setAddress", "setAddress():(address)", []);

    return result[0].toAddress();
  }

  try_setAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("setAddress", "setAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _setAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EvolveToLevel2Call extends ethereum.Call {
  get inputs(): EvolveToLevel2Call__Inputs {
    return new EvolveToLevel2Call__Inputs(this);
  }

  get outputs(): EvolveToLevel2Call__Outputs {
    return new EvolveToLevel2Call__Outputs(this);
  }
}

export class EvolveToLevel2Call__Inputs {
  _call: EvolveToLevel2Call;

  constructor(call: EvolveToLevel2Call) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class EvolveToLevel2Call__Outputs {
  _call: EvolveToLevel2Call;

  constructor(call: EvolveToLevel2Call) {
    this._call = call;
  }
}

export class EvolveToLevel3Call extends ethereum.Call {
  get inputs(): EvolveToLevel3Call__Inputs {
    return new EvolveToLevel3Call__Inputs(this);
  }

  get outputs(): EvolveToLevel3Call__Outputs {
    return new EvolveToLevel3Call__Outputs(this);
  }
}

export class EvolveToLevel3Call__Inputs {
  _call: EvolveToLevel3Call;

  constructor(call: EvolveToLevel3Call) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class EvolveToLevel3Call__Outputs {
  _call: EvolveToLevel3Call;

  constructor(call: EvolveToLevel3Call) {
    this._call = call;
  }
}

export class EvolveToLevel4Call extends ethereum.Call {
  get inputs(): EvolveToLevel4Call__Inputs {
    return new EvolveToLevel4Call__Inputs(this);
  }

  get outputs(): EvolveToLevel4Call__Outputs {
    return new EvolveToLevel4Call__Outputs(this);
  }
}

export class EvolveToLevel4Call__Inputs {
  _call: EvolveToLevel4Call;

  constructor(call: EvolveToLevel4Call) {
    this._call = call;
  }

  get _teamName(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class EvolveToLevel4Call__Outputs {
  _call: EvolveToLevel4Call;

  constructor(call: EvolveToLevel4Call) {
    this._call = call;
  }
}

export class GetFetchTeamFourCall extends ethereum.Call {
  get inputs(): GetFetchTeamFourCall__Inputs {
    return new GetFetchTeamFourCall__Inputs(this);
  }

  get outputs(): GetFetchTeamFourCall__Outputs {
    return new GetFetchTeamFourCall__Outputs(this);
  }
}

export class GetFetchTeamFourCall__Inputs {
  _call: GetFetchTeamFourCall;

  constructor(call: GetFetchTeamFourCall) {
    this._call = call;
  }

  get _fetchTeamFourAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetFetchTeamFourCall__Outputs {
  _call: GetFetchTeamFourCall;

  constructor(call: GetFetchTeamFourCall) {
    this._call = call;
  }
}

export class GetFetchTeamOneCall extends ethereum.Call {
  get inputs(): GetFetchTeamOneCall__Inputs {
    return new GetFetchTeamOneCall__Inputs(this);
  }

  get outputs(): GetFetchTeamOneCall__Outputs {
    return new GetFetchTeamOneCall__Outputs(this);
  }
}

export class GetFetchTeamOneCall__Inputs {
  _call: GetFetchTeamOneCall;

  constructor(call: GetFetchTeamOneCall) {
    this._call = call;
  }

  get _fetchTeamOneAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetFetchTeamOneCall__Outputs {
  _call: GetFetchTeamOneCall;

  constructor(call: GetFetchTeamOneCall) {
    this._call = call;
  }
}

export class GetFetchTeamThreeCall extends ethereum.Call {
  get inputs(): GetFetchTeamThreeCall__Inputs {
    return new GetFetchTeamThreeCall__Inputs(this);
  }

  get outputs(): GetFetchTeamThreeCall__Outputs {
    return new GetFetchTeamThreeCall__Outputs(this);
  }
}

export class GetFetchTeamThreeCall__Inputs {
  _call: GetFetchTeamThreeCall;

  constructor(call: GetFetchTeamThreeCall) {
    this._call = call;
  }

  get _fetchTeamThreeAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetFetchTeamThreeCall__Outputs {
  _call: GetFetchTeamThreeCall;

  constructor(call: GetFetchTeamThreeCall) {
    this._call = call;
  }
}

export class GetFetchTeamTwoCall extends ethereum.Call {
  get inputs(): GetFetchTeamTwoCall__Inputs {
    return new GetFetchTeamTwoCall__Inputs(this);
  }

  get outputs(): GetFetchTeamTwoCall__Outputs {
    return new GetFetchTeamTwoCall__Outputs(this);
  }
}

export class GetFetchTeamTwoCall__Inputs {
  _call: GetFetchTeamTwoCall;

  constructor(call: GetFetchTeamTwoCall) {
    this._call = call;
  }

  get _fetchTeamTwoAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetFetchTeamTwoCall__Outputs {
  _call: GetFetchTeamTwoCall;

  constructor(call: GetFetchTeamTwoCall) {
    this._call = call;
  }
}

export class GetMintTeamOneAddressCall extends ethereum.Call {
  get inputs(): GetMintTeamOneAddressCall__Inputs {
    return new GetMintTeamOneAddressCall__Inputs(this);
  }

  get outputs(): GetMintTeamOneAddressCall__Outputs {
    return new GetMintTeamOneAddressCall__Outputs(this);
  }
}

export class GetMintTeamOneAddressCall__Inputs {
  _call: GetMintTeamOneAddressCall;

  constructor(call: GetMintTeamOneAddressCall) {
    this._call = call;
  }

  get _mintTeamOneAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetMintTeamOneAddressCall__Outputs {
  _call: GetMintTeamOneAddressCall;

  constructor(call: GetMintTeamOneAddressCall) {
    this._call = call;
  }
}

export class GetMintTeamTwoAddressCall extends ethereum.Call {
  get inputs(): GetMintTeamTwoAddressCall__Inputs {
    return new GetMintTeamTwoAddressCall__Inputs(this);
  }

  get outputs(): GetMintTeamTwoAddressCall__Outputs {
    return new GetMintTeamTwoAddressCall__Outputs(this);
  }
}

export class GetMintTeamTwoAddressCall__Inputs {
  _call: GetMintTeamTwoAddressCall;

  constructor(call: GetMintTeamTwoAddressCall) {
    this._call = call;
  }

  get _mintTeamTwoAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class GetMintTeamTwoAddressCall__Outputs {
  _call: GetMintTeamTwoAddressCall;

  constructor(call: GetMintTeamTwoAddressCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetPauseCall extends ethereum.Call {
  get inputs(): SetPauseCall__Inputs {
    return new SetPauseCall__Inputs(this);
  }

  get outputs(): SetPauseCall__Outputs {
    return new SetPauseCall__Outputs(this);
  }
}

export class SetPauseCall__Inputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }

  get _paused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPauseCall__Outputs {
  _call: SetPauseCall;

  constructor(call: SetPauseCall) {
    this._call = call;
  }
}

export class SetPredictionAddressCall extends ethereum.Call {
  get inputs(): SetPredictionAddressCall__Inputs {
    return new SetPredictionAddressCall__Inputs(this);
  }

  get outputs(): SetPredictionAddressCall__Outputs {
    return new SetPredictionAddressCall__Outputs(this);
  }
}

export class SetPredictionAddressCall__Inputs {
  _call: SetPredictionAddressCall;

  constructor(call: SetPredictionAddressCall) {
    this._call = call;
  }

  get _predictionAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPredictionAddressCall__Outputs {
  _call: SetPredictionAddressCall;

  constructor(call: SetPredictionAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
